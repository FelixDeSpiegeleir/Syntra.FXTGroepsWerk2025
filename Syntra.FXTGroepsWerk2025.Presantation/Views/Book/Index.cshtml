@model IEnumerable<OWN.GroupProject2.Objects.Book>

@{
    ViewData["Title"] = "Index";
}

@{
    var dummyBooks = new List<OWN.GroupProject2.Objects.Book>
    {
        new OWN.GroupProject2.Objects.Book { Pages = 100, Title = "Book 1", IsCompleted = true },
        new OWN.GroupProject2.Objects.Book { Pages = 200, Title = "Book 2", IsCompleted = false },
        new OWN.GroupProject2.Objects.Book { Pages = 300, Title = "Book 3", IsCompleted = true }
    };
}
<style>
    .table-container {
        display: flex;
        justify-content: center;
        align-items: center;
        max-width: 1000px;
        margin: 0 auto;
        border: double black;
    }

    .table-light {
        background-color: rgba(173, 216, 230, 0.2); /* Light blue with 20% opacity */
        width: 100%;
    }
</style>
<h1>BOOK LIST</h1>

<p>
    <a asp-action="Create">Create New</a>
</p>
<div class="table-container">
    <table class="table-light" id="bookTable">
        <thead>
            <tr>
                <th onclick="sortTable(0)">
                    @Html.DisplayNameFor(model => model.Pages)
                </th>
                <th onclick="sortTable(1)">
                    @Html.DisplayNameFor(model => model.Title)
                </th>
                <th onclick="sortTable(2)">
                    @Html.DisplayNameFor(model => model.IsCompleted)
                </th>
                <th></th>
            </tr>
        </thead>
        <tbody>
        @foreach (var item in dummyBooks) {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.Pages)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Title)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.IsCompleted)
                </td>
                <td>
                    @Html.ActionLink("Edit", "Edit", new { /* id=item.PrimaryKey */ }) |
                    @Html.ActionLink("Details", "Details", new { /* id=item.PrimaryKey */ }) |
                    @Html.ActionLink("Delete", "Delete", new { /* id=item.PrimaryKey */ })
                </td>
            </tr>
        }
        </tbody>
    </table>
</div>


@section Scripts {
    <script>
        function sortTable(columnIndex) {
            var table, rows, switching, i, x, y, shouldSwitch, dir, switchcount = 0;
            table = document.getElementById("bookTable");
            switching = true;
            dir = "asc"; 
            while (switching) {
                switching = false;
                rows = table.rows;
                for (i = 1; i < (rows.length - 1); i++) {
                    shouldSwitch = false;
                    x = rows[i].getElementsByTagName("TD")[columnIndex];
                    y = rows[i + 1].getElementsByTagName("TD")[columnIndex];
                    if (dir == "asc") {
                        if (x.innerHTML.toLowerCase() > y.innerHTML.toLowerCase()) {
                            shouldSwitch = true;
                            break;
                        }
                    } else if (dir == "desc") {
                        if (x.innerHTML.toLowerCase() < y.innerHTML.toLowerCase()) {
                            shouldSwitch = true;
                            break;
                        }
                    }
                }
                if (shouldSwitch) {
                    rows[i].parentNode.insertBefore(rows[i + 1], rows[i]);
                    switching = true;
                    switchcount++;
                } else {
                    if (switchcount == 0 && dir == "asc") {
                        dir = "desc";
                        switching = true;
                    }
                }
            }
        }
    </script>
}
