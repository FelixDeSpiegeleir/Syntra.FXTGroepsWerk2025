Database called MoviesAndBooksDB

query :

-- Create the Author table
CREATE TABLE Author (
    Id INT PRIMARY KEY IDENTITY(1,1), -- Auto-incrementing primary key
    Name NVARCHAR(255) NOT NULL       -- Name of the author
);

-- Create the Director table
CREATE TABLE Director (
    Id INT PRIMARY KEY IDENTITY(1,1), -- Auto-incrementing primary key
    Name NVARCHAR(255) NOT NULL       -- Name of the director
);

-- Create the Book table
CREATE TABLE Book (
    Id INT PRIMARY KEY IDENTITY(1,1), -- Auto-incrementing primary key
    Title NVARCHAR(255) NOT NULL,     -- Title of the book
    Pages INT NOT NULL,               -- Number of pages
    AuthorId INT NOT NULL,            -- Foreign key to Author table
    IsRead BIT NOT NULL,              -- Whether the book has been read
    CONSTRAINT FK_Book_Author FOREIGN KEY (AuthorId) REFERENCES Author(Id) -- Foreign key constraint
);

-- Create the Movie table
CREATE TABLE Movie (
    Id INT PRIMARY KEY IDENTITY(1,1), -- Auto-incrementing primary key
    Title NVARCHAR(255) NOT NULL,     -- Title of the movie
    Duration INT NOT NULL,            -- Duration in minutes
    DirectorId INT NOT NULL,          -- Foreign key to Director table
    IsWatched BIT NOT NULL,           -- Whether the movie has been watched
    CONSTRAINT FK_Movie_Director FOREIGN KEY (DirectorId) REFERENCES Director(Id) -- Foreign key constraint
);

-- Create the WatchList table
CREATE TABLE WatchList (
    Id INT PRIMARY KEY IDENTITY(1,1), -- Auto-incrementing primary key
    Name NVARCHAR(255) NOT NULL,      -- Name of the watchlist
    Type NVARCHAR(50) NOT NULL,       -- Type of list (Movie, Book, etc.)
    IsComplete BIT NOT NULL,          -- Whether the list is complete
    PagesOrDuration INT NOT NULL,     -- Total pages (books) or duration (movies)
    CreatedDate DATETIME NOT NULL DEFAULT GETDATE() -- When the list was created
);

-- Create the WatchList_Movies (junction table)
CREATE TABLE WatchList_Movies (
    WatchListId INT NOT NULL,         -- Foreign key to WatchList table
    MovieId INT NOT NULL,             -- Foreign key to Movie table
    CONSTRAINT FK_WatchList_Movies_WatchList FOREIGN KEY (WatchListId) REFERENCES WatchList(Id),
    CONSTRAINT FK_WatchList_Movies_Movie FOREIGN KEY (MovieId) REFERENCES Movie(Id),
    PRIMARY KEY (WatchListId, MovieId) -- Composite primary key
);

-- Create the WatchList_Books (junction table)
CREATE TABLE WatchList_Books (
    WatchListId INT NOT NULL,         -- Foreign key to WatchList table
    BookId INT NOT NULL,              -- Foreign key to Book table
    CONSTRAINT FK_WatchList_Books_WatchList FOREIGN KEY (WatchListId) REFERENCES WatchList(Id),
    CONSTRAINT FK_WatchList_Books_Book FOREIGN KEY (BookId) REFERENCES Book(Id),
    PRIMARY KEY (WatchListId, BookId) -- Composite primary key
);
